{"version":3,"sources":["views/reactDemo/03chatApp/MessageList.jsx"],"names":["MessageList","deepClone","element","JSON","parse","stringify","onChangeMessages","e","key","value","target","_this$props","_this","props","inputMessages","updateInputMessages","inputMessagesCopy","index","findIndex","message","onDelete","_this$props2","keys","updateKeys","keysCopy","Object","_Users_wangkai_workSpace_personalCode_study01_reactJs_react_example_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_8__","splice","onChangeStatus","_this$props3","edit","_this2","this","react__WEBPACK_IMPORTED_MODULE_14___default","a","createElement","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","antd_es_list__WEBPACK_IMPORTED_MODULE_3__","bordered","size","dataSource","renderItem","item","Item","className","antd_es_input__WEBPACK_IMPORTED_MODULE_7__","placeholder","onChange","href","onClick","antd_es_icon__WEBPACK_IMPORTED_MODULE_5__","type","Component"],"mappings":"yOAGMA,6MACJC,UAAY,SAAAC,GAAO,OAAIC,KAAKC,MAAMD,KAAKE,UAAUH,OACjDI,iBAAmB,SAACC,EAAGC,GAAQ,IACrBC,EAAUF,EAAEG,OAAZD,MADqBE,EAEkBC,EAAKC,MAA5CC,EAFqBH,EAErBG,cAAeC,EAFMJ,EAENI,oBACjBC,EAAoBJ,EAAKX,UAAUa,GACnCG,EAAQD,EAAkBE,UAAU,SAAAC,GAAO,OAAIA,EAAQX,MAAQA,IACrEQ,EAAkBC,GAAOR,MAAQA,EACjCM,EAAoBC,MAEtBI,SAAW,SAACZ,GAAQ,IAAAa,EAC+CT,EAAKC,MAA9DC,EADUO,EACVP,cAAeC,EADLM,EACKN,oBAAqBO,EAD1BD,EAC0BC,KAAMC,EADhCF,EACgCE,WAC5CP,EAAoBJ,EAAKX,UAAUa,GACnCU,EAAQC,OAAAC,EAAA,EAAAD,CAAOH,GACfL,EAAQD,EAAkBE,UAAU,SAAAC,GAAO,OAAIA,EAAQX,MAAQA,IACrEQ,EAAkBW,OAAOV,EAAO,GAChCO,EAASG,OAAOV,EAAO,GACvBF,EAAoBC,GACpBO,EAAWC,MAEbI,eAAiB,SAACpB,GAAQ,IAAAqB,EACuBjB,EAAKC,MAA5CC,EADgBe,EAChBf,cAAeC,EADCc,EACDd,oBACjBC,EAAoBJ,EAAKX,UAAUa,GACnCG,EAAQD,EAAkBE,UAAU,SAAAC,GAAO,OAAIA,EAAQX,MAAQA,IAC/DE,EAASM,EAAkBC,GAC7BP,EAAOoB,KACTpB,EAAOoB,MAAO,EAEdpB,EAAOoB,MAAO,EAEhBf,EAAoBC,4EAGZ,IAAAe,EAAAC,KACAlB,EAAkBkB,KAAKnB,MAAvBC,cACR,OACEmB,EAAAC,EAAAC,cAAAC,EAAA,OACEH,EAAAC,EAAAC,cAAAE,EAAA,GACEC,UAAQ,EACRC,KAAM,QACNC,WAAY1B,EACZ2B,WAAY,SAAAC,GAAI,OACdT,EAAAC,EAAAC,cAAAE,EAAA,EAAMM,KAAN,CAAWnC,IAAKkC,EAAKlC,IAAKoC,UAAW,iBACnCX,EAAAC,EAAAC,cAAA,QAAMS,UAAW,sBAEbF,EAAKZ,KACHG,EAAAC,EAAAC,cAAAU,EAAA,GACEN,KAAM,QACNO,YAAa,yBACbrC,MAAOiC,EAAKjC,MACZsC,SAAU,SAACxC,GAAD,OAAOwB,EAAKzB,iBAAiBC,EAAGmC,EAAKlC,QAGjDkC,EAAKjC,OAGXwB,EAAAC,EAAAC,cAAA,QAAMS,UAAW,uBACfX,EAAAC,EAAAC,cAAA,KACEa,KAAK,eACLC,QAAS,kBAAMlB,EAAKH,eAAec,EAAKlC,OAExCyB,EAAAC,EAAAC,cAAAe,EAAA,GAAMC,KAAMT,EAAKZ,KAAO,QAAU,UAEpCG,EAAAC,EAAAC,cAAA,KACEa,KAAK,eACLC,QAAS,kBAAMlB,EAAKX,SAASsB,EAAKlC,OAElCyB,EAAAC,EAAAC,cAAAe,EAAA,GAAMC,KAAK,yBAnEHC,aA6EXpD","file":"static/js/10.273507b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Icon, Input, List, Row } from 'antd';\n\nclass MessageList extends Component {\n  deepClone = element => JSON.parse(JSON.stringify(element));\n  onChangeMessages = (e, key) => {\n    const { value } = e.target;\n    const { inputMessages, updateInputMessages } = this.props;\n    const inputMessagesCopy = this.deepClone(inputMessages);\n    const index = inputMessagesCopy.findIndex(message => message.key === key);\n    inputMessagesCopy[index].value = value;\n    updateInputMessages(inputMessagesCopy);\n  };\n  onDelete = (key) => {\n    const { inputMessages, updateInputMessages, keys, updateKeys } = this.props;\n    const inputMessagesCopy = this.deepClone(inputMessages);\n    const keysCopy = [...keys];\n    const index = inputMessagesCopy.findIndex(message => message.key === key);\n    inputMessagesCopy.splice(index, 1);\n    keysCopy.splice(index, 1);\n    updateInputMessages(inputMessagesCopy);\n    updateKeys(keysCopy);\n  };\n  onChangeStatus = (key) => {\n    const { inputMessages, updateInputMessages } = this.props;\n    const inputMessagesCopy = this.deepClone(inputMessages);\n    const index = inputMessagesCopy.findIndex(message => message.key === key);\n    const target = inputMessagesCopy[index];\n    if (target.edit) {\n      target.edit = false;\n    } else {\n      target.edit = true;\n    }\n    updateInputMessages(inputMessagesCopy);\n  };\n\n  render () {\n    const { inputMessages } = this.props;\n    return (\n      <Row>\n        <List\n          bordered\n          size={'small'}\n          dataSource={inputMessages}\n          renderItem={item => (\n            <List.Item key={item.key} className={'chat-app-item'}>\n              <span className={'chat-app-item-text'}>\n                {\n                  item.edit ?\n                    <Input\n                      size={'small'}\n                      placeholder={'please write something'}\n                      value={item.value}\n                      onChange={(e) => this.onChangeMessages(e, item.key)}\n                    />\n                    :\n                    item.value\n                }\n              </span>\n              <span className={'chat-app-item-tools'}>\n                <a\n                  href=\"javascript:;\"\n                  onClick={() => this.onChangeStatus(item.key)}\n                >\n                  <Icon type={item.edit ? 'check' : 'edit'}/>\n                </a>\n                <a\n                  href=\"javascript:;\"\n                  onClick={() => this.onDelete(item.key)}\n                >\n                  <Icon type=\"delete\"/>\n                </a>\n              </span>\n            </List.Item>\n          )}\n        />\n      </Row>\n    );\n  }\n}\nexport default MessageList;\n"],"sourceRoot":""}